Commands accepted:
lw register, memory                     - Load from memory position content in the register
sw register, memory                     - Save in memory the register's content.
li register, value                      - Assign a value to the register
move register, register                 - Move a value from a register to other.
add register, register, register        - Sum two registers and place the result in other.
addi register, register, value          - Sum a register with the given value and puts the result in other register
sub register, register, register        - Subtract two registers and place the result in other.
subi register, register, value          - Subtract from register the given value and puts the result in other register
beq register, register, label           - Compare if the two registers are equal and jump to the label if true
=====================================================================================
Test 1:

li $r1, 10
li $r2, 20
li $r3, 60
add $r4, $r2, $r3
addi $r5, $r4, 15
subi $r6, $r3, 55
j label1
li $r1, 5000
li $r2, 5000
li $r3, 5000
label1:
li $r7, 60
beq $r3, $r7, label2
sw $r1, [0]
sw $r2, [1]
label2:
sw $r1, [3]
sw $r2, [4]
lw $r9, [4]
move $r8, $r4
beq $r3, $r4, label3
li $r1, 2000
li $r2, 2000
li $r3, 2000
label3:

Expected response:
PC: 22
Data Memory:
[0, 0, 0, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Registers Memory:
[2000, 2000, 2000, 80, 95, 5, 60, 80, 20, 0]
=====================================================================================
Test 2: (inst = 6)

li r1, 10
li r2, 20
li r3, 40
add r1, r1, r2
add r2, r2, r3
add r1, r1, r3

Expected response:
PC:6
Data Memory:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Registers Memory:
[70, 60, 40, 0, 0, 0, 0, 0, 0, 0]
=====================================================================================
Test 3:

j label1
label2:
j label3
label4:
j label5
label6:
j final
label5:
j label6
label3:
j label4
label1:
j label2
final:
li r1, 40

Expected response:
PC:8
Data Memory:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Registers Memory:
[40, 0, 0, 0, 0, 0, 0, 0, 0, 0]
=====================================================================================
Test 4: //5 Summation

li r1, 6
li r2, 1
loop:
add r3, r3, r2
addi r2, r2, 1
beq r2, r1, final
j loop
final:
sw r3, 1

Expected response:
PC:7
Data Memory:
[0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Registers Memory:
[6, 6, 15, 0, 0, 0, 0, 0, 0, 0]
=====================================================================================
Test 5:

li $r1, 10
li $r2, 20
addi $r3, $r1, 20
sub $r4, $r3, $r1
beq \$r2, \$r4, label
add $r2, $r4, $r3
move $r5, $r2
label :
sw $r4, [10]

Expected response:
PC: 8
Data Memory:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Registers Memory:
[10, 20, 30, 20, 0, 0, 0, 0, 0, 0]